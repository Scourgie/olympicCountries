// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dataTransferOlympicGames.Models;

#nullable disable

namespace dataTransferOlympicGames.Migrations
{
    [DbContext(typeof(CountryContext))]
    [Migration("20230301232900_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("dataTransferOlympicGames.Models.Category", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = "i",
                            Name = "Indoor"
                        },
                        new
                        {
                            CategoryID = "o",
                            Name = "Outdoor"
                        });
                });

            modelBuilder.Entity("dataTransferOlympicGames.Models.Country", b =>
                {
                    b.Property<string>("CountryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GameID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LogoImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("GameID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = "can",
                            CategoryID = "i",
                            GameID = "wo",
                            LogoImage = "CAN.png",
                            Name = "Canada"
                        },
                        new
                        {
                            CountryID = "swe",
                            CategoryID = "i",
                            GameID = "wo",
                            LogoImage = "SWE.png",
                            Name = "Sweden"
                        },
                        new
                        {
                            CountryID = "gbr",
                            CategoryID = "i",
                            GameID = "wo",
                            LogoImage = "GBR.png",
                            Name = "Great Britain"
                        },
                        new
                        {
                            CountryID = "jam",
                            CategoryID = "o",
                            GameID = "wo",
                            LogoImage = "JAM.png",
                            Name = "Jamaica"
                        },
                        new
                        {
                            CountryID = "ita",
                            CategoryID = "o",
                            GameID = "wo",
                            LogoImage = "ITA.png",
                            Name = "Italy"
                        },
                        new
                        {
                            CountryID = "jap",
                            CategoryID = "o",
                            GameID = "wo",
                            LogoImage = "JAP.png",
                            Name = "Japan"
                        },
                        new
                        {
                            CountryID = "ger",
                            CategoryID = "i",
                            GameID = "so",
                            LogoImage = "GER.png",
                            Name = "Germany"
                        },
                        new
                        {
                            CountryID = "chi",
                            CategoryID = "i",
                            GameID = "so",
                            LogoImage = "CHI.png",
                            Name = "China"
                        },
                        new
                        {
                            CountryID = "mex",
                            CategoryID = "i",
                            GameID = "so",
                            LogoImage = "MEX.png",
                            Name = "Mexico"
                        },
                        new
                        {
                            CountryID = "bra",
                            CategoryID = "o",
                            GameID = "so",
                            LogoImage = "BRA.png",
                            Name = "Brazil"
                        },
                        new
                        {
                            CountryID = "net",
                            CategoryID = "o",
                            GameID = "so",
                            LogoImage = "NET.png",
                            Name = "Netherlands"
                        },
                        new
                        {
                            CountryID = "usa",
                            CategoryID = "o",
                            GameID = "so",
                            LogoImage = "USA.png",
                            Name = "USA"
                        },
                        new
                        {
                            CountryID = "tha",
                            CategoryID = "i",
                            GameID = "po",
                            LogoImage = "THA.png",
                            Name = "Thailand"
                        },
                        new
                        {
                            CountryID = "uru",
                            CategoryID = "i",
                            GameID = "po",
                            LogoImage = "URU.png",
                            Name = "Uruguay"
                        },
                        new
                        {
                            CountryID = "ukr",
                            CategoryID = "i",
                            GameID = "po",
                            LogoImage = "UKR.png",
                            Name = "Ukraine"
                        },
                        new
                        {
                            CountryID = "aus",
                            CategoryID = "o",
                            GameID = "po",
                            LogoImage = "AUS.png",
                            Name = "Austria"
                        },
                        new
                        {
                            CountryID = "pak",
                            CategoryID = "o",
                            GameID = "po",
                            LogoImage = "PAK.png",
                            Name = "Pakistan"
                        },
                        new
                        {
                            CountryID = "zim",
                            CategoryID = "o",
                            GameID = "po",
                            LogoImage = "ZIM.png",
                            Name = "Zimbabwe"
                        },
                        new
                        {
                            CountryID = "fra",
                            CategoryID = "i",
                            GameID = "yo",
                            LogoImage = "FRA.png",
                            Name = "France"
                        },
                        new
                        {
                            CountryID = "cyp",
                            CategoryID = "i",
                            GameID = "yo",
                            LogoImage = "CYP.png",
                            Name = "Cyprus"
                        },
                        new
                        {
                            CountryID = "rus",
                            CategoryID = "i",
                            GameID = "yo",
                            LogoImage = "RUS.png",
                            Name = "Russia"
                        },
                        new
                        {
                            CountryID = "fin",
                            CategoryID = "o",
                            GameID = "yo",
                            LogoImage = "FIN.png",
                            Name = "Finland"
                        },
                        new
                        {
                            CountryID = "slo",
                            CategoryID = "o",
                            GameID = "yo",
                            LogoImage = "SLO.png",
                            Name = "Slovakia"
                        },
                        new
                        {
                            CountryID = "por",
                            CategoryID = "o",
                            GameID = "yo",
                            LogoImage = "POR.png",
                            Name = "Portugal"
                        });
                });

            modelBuilder.Entity("dataTransferOlympicGames.Models.Game", b =>
                {
                    b.Property<string>("GameID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameID = "wo",
                            Name = "Winter Olympics"
                        },
                        new
                        {
                            GameID = "so",
                            Name = "Summer Olympics"
                        },
                        new
                        {
                            GameID = "po",
                            Name = "Paralympics"
                        },
                        new
                        {
                            GameID = "yo",
                            Name = "Youth Olympic Games"
                        });
                });

            modelBuilder.Entity("dataTransferOlympicGames.Models.Country", b =>
                {
                    b.HasOne("dataTransferOlympicGames.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dataTransferOlympicGames.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameID");

                    b.Navigation("Category");

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
